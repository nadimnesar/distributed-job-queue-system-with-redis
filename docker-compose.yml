x-producer-common:
  &producer-common
  build:
    context: ./producer
    dockerfile: Dockerfile
  environment:
    - SERVER_PORT=8080
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/job_queue_db
  networks:
    - app-network

x-worker-common:
  &worker-common
  build:
    context: ./worker
    dockerfile: Dockerfile
  environment:
    - SERVER_PORT=8085
    - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/job_queue_db
  networks:
    - app-network

services:
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    ports:
      - "8090:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
    depends_on:
      - producer_1
      - producer_2
      - producer_3
      - worker_1
      - worker_2
      - worker_3
      - worker_4
      - worker_5
    networks:
      - app-network

  producer_1:
    <<: *producer-common
    container_name: producer_1

  producer_2:
    <<: *producer-common
    container_name: producer_2

  producer_3:
    <<: *producer-common
    container_name: producer_3

  worker_1:
    <<: *worker-common
    container_name: worker_1

  worker_2:
    <<: *worker-common
    container_name: worker_2

  worker_3:
    <<: *worker-common
    container_name: worker_3

  worker_4:
    <<: *worker-common
    container_name: worker_4

  worker_5:
    <<: *worker-common
    container_name: worker_5

  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: job_queue_db
    ports:
      - "6000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: bridge
